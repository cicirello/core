name: Maven Package

on:
  release:
    types: [created]

jobs:
  publish:

    runs-on: ubuntu-latest

    env:
      artifact_name: core

    steps:
    - uses: actions/checkout@v3

    - name: Get the release version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Set up JDK 17 for deploy to OSSRH
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'
        server-id: ossrh 
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Update package version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}

    - name: Publish to Apache Maven Central
      run: mvn deploy -PossrhDeploy
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}		

    - name: Set up JDK 17 for deploy to github packages
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'
        server-id: github 

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -PgithubDeploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

    - name: Upload jar files to release as release assets
      run: |
        TAG=${GITHUB_REF/refs\/tags\//}
        gh release upload ${TAG} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}.jar
        gh release upload ${TAG} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-sources.jar
        gh release upload ${TAG} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-javadoc.jar 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version in pom with a Pull Request
      uses: peter-evans/create-pull-request@v4.0.4
      with:
        title: "Automated update: version in pom.xml"
        commit-message: "Automated update: version in pom.xml"
        add-paths: pom.xml
        branch: create-pull-request/version-update
        delete-branch: true
        author: Vincent A. Cicirello <cicirello@users.noreply.github.com>
        committer: Vincent A. Cicirello <cicirello@users.noreply.github.com>
        body: "Automated update: New version extracted from release tag and injected into pom.xml."
